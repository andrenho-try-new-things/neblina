#
# generate C++ classes for JSON mapping
#

# parameters: schema_file, output_dir, output_filename (no extension), dependency file, class_name
define json2cpp-macro
$(5): $(2)/$(3).o

$(2)/$(3).o: $(2)/$(3).cc

$(2)/$(3).cc: $(2)/$(1)
	$(JSON2CPP) $$^ $(4) $(2)

AUTOGENERATED_FILES += $(2)/$(3).cc $(2)/$(3).hh
OBJ += $(2)/$(3).o
endef
json2cpp = $(eval $(call json2cpp-macro,$(1),$(2),$(3),$(4),$(5)))

#
# generate embedded files
#

%.gen.inc: %.json
	echo "#include <stdint.h>" > $@ && \
	echo "#include <stddef.h>" >> $@ && \
	echo "static const uint8_t $(basename $(notdir $^))[] = {" >> $@ && \
	cat $^ | gzip | xxd -i >> $@ && \
	echo "};" >> $@
	echo "static size_t $(basename $(notdir $^))_uncompressed_sz = $(shell stat ${STAT_PRM} $^);" >> $@

